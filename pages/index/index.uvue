<template>
	<!-- 导航栏 -->
	<ux-nav-bar :left-menus="leftMenus" :right-menus="rightMenus" @on-left-menus="onLeftMenus" @on-right-menus="onRightMenus"></ux-nav-bar>


	<!-- #ifdef APP -->
	<scroll-view class="scroll-view">
	<!-- #endif -->

		<view class="container">

			<!-- tab切换 -->
			<ux-tab :width="710">
				<ux-tab-item label="基础组件" :index="0">
					<ux-title title="组件列表" icon="trademark"></ux-title>
					<ux-grid :col="3" :border="true" @change="changeGridItem">
						<ux-grid-item :text="item.name" :icon="item.icon" :index="index"
							v-for="(item,index) in components" :key="index"></ux-grid-item>
					</ux-grid>
				</ux-tab-item>
				<ux-tab-item label="业务组件" :index="1">
					标签er内容456
				</ux-tab-item>
				<ux-tab-item label="API" :index="2">
					标签三内容789
				</ux-tab-item>
			</ux-tab>
		</view>
	<!-- #ifdef APP -->
	</scroll-view>
	<!-- #endif -->


	<!-- ux-popup -->
	<ux-popup ref="uxPopup" type="bottom">
		<view class="wrap">
			neirong
		</view>
	</ux-popup>
</template>

<script>
	import { state } from '../../stores/index.uts'
	import { Menu } from '@/components/ux-nav-bar/types/types.uts'
	import { Item, Fn } from './types/types.uts'
	export default {
		data() {
			return {
				title: 'Hello',
				uxPopup: null as UxPopupComponentPublicInstance | null,
				components: [{ name: '标题', icon: 'trademark' },
				{ name: '弹窗', icon: 'plus' },
				{ name: '宫格', icon: 'plus' },
				{ name: '导航栏', icon: 'plus' },
				{ name: '选项卡', icon: 'plus' },
				{ name: 'icon图标', icon: 'plus' }] as Array<Item>,
				leftMenus: [{ icon: 'chevron-left', type: 'back', color: '#fff' }, { icon: 'plus', text: '测试', color: '#fff' }] as Array<Menu>,
				rightMenus: [{ icon: 'share-square', color: '#fff' }, { icon: 'bell', color: '#fff' }] as Array<Menu>,
			}
		},
		onLoad() {
			if (!state.hasLogin) return
		},
		onReady() {
			this.uxPopup = this.$refs['uxPopup'] as UxPopupComponentPublicInstance
		},
		methods: {
			onLeftMenus(index : number) {
				console.log('left-menus', index)
			},
			onRightMenus(index : number) {
				console.log('right-menus', index)
			},
			changeGridItem(index : number) {
				console.log(index)
				const fns = [() => { }, () => {
					this.openPopup()
				}] as Array<Fn>
				fns[index]()
			},
			openPopup() {
				this.uxPopup?.open?.()
			}

		}
	}
</script>

<style lang="scss" scoped>
	.scroll-view {
		flex: 1;
	}

	.container {
		padding: 160rpx 20rpx 20rpx 20rpx;
	}

	.wrap {
		height: 400rpx;
		background-color: #fff;
	}
</style>