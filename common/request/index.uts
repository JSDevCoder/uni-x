import UxRequest from '@/uni_modules/ux-request/js_sdk/request.uts'
import UxInterceptor from '@/uni_modules/ux-request/js_sdk/interceptors.uts'
import { UxRequestOptions, UxResponseFail } from '@/uni_modules/ux-request/js_sdk/types.uts'

// 请求拦截器示例
class HttpInterceptor extends UxInterceptor {
	constructor() {
		super()
	}
	override beforeRequest(config : UxRequestOptions) : UxRequestOptions {
		config.baseURL = 'http://36.142.155.88:8888'
		config.url = config.baseURL + config.api
		config.header['Content-Type'] = 'application/json'
		return config
	}
	override afterResponseSucc(response : UTSJSONObject) : UTSJSONObject {
		return response
	}
	override afterResponseFail(error : UxResponseFail) : UxResponseFail {
		uni.showToast({
			title: '错误码: ' + error.errCode + ', 错误信息: ' + error.errMsg,
			icon: 'none'
		})
		return error
	}
}

// 日志拦截器示例
class LogInterceptor extends UxInterceptor {
	constructor() {
		super()
	}
	override beforeRequest(config : UxRequestOptions) : UxRequestOptions {
		console.log('请求前拦截器日志：', config)
		return config
	}
	override afterResponseFail(error : UxResponseFail) : UxResponseFail {
		console.log('请求失败拦截器日志：', error)
		return error
	}
}

// 请求实例
const ins = UxRequest.create()

// 添加拦截器
ins.addInterceptor(new HttpInterceptor())
ins.addInterceptor(new LogInterceptor())

export default ins